{"remainingRequest":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\src\\views\\diagnostic.vue?vue&type=style&index=0&id=0939d47e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\src\\views\\diagnostic.vue","mtime":1748534686000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1748415476000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZGlhZ25vc3RpYy1wYWdlIHsNCiAgcGFkZGluZzogMjBweDsNCn0NCi5ib3gtY2FyZCB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoudGVzdC1jb21wb25lbnQgew0KICBwYWRkaW5nOiAyMHB4Ow0KICBib3JkZXI6IDFweCBzb2xpZCAjZWJlZWY1Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQp9DQoudGVzdC1yZXN1bHQgew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICBwYWRkaW5nOiAxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQp9DQoudGVzdC1lZGl0b3Igew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0K"},{"version":3,"sources":["diagnostic.vue"],"names":[],"mappings":";AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"diagnostic.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"diagnostic-page\">\r\n    <h2>系统组件诊断</h2>\r\n    \r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>组件加载状态</span>\r\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"runDiagnostic\">重新诊断</el-button>\r\n      </div>\r\n      \r\n      <el-table :data=\"componentStatus\" style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"组件名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n              {{ scope.row.status ? '正常' : '异常' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"message\" label=\"详细信息\"></el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n    \r\n    <el-card class=\"box-card\" style=\"margin-top: 20px;\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>系统环境信息</span>\r\n      </div>\r\n      \r\n      <el-descriptions border>\r\n        <el-descriptions-item label=\"Vue版本\">{{ vueVersion }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"浏览器\">{{ browserInfo }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"Token状态\">\r\n          <el-tag :type=\"hasToken ? 'success' : 'danger'\">\r\n            {{ hasToken ? '存在' : '不存在' }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"基础URL\">{{ baseUrl }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"当前角色\">{{ role }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </el-card>\r\n    \r\n    <el-card class=\"box-card\" style=\"margin-top: 20px;\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>问题模块测试</span>\r\n      </div>\r\n      \r\n      <el-tabs v-model=\"activeModule\" type=\"card\">\r\n        <el-tab-pane label=\"文件上传组件\" name=\"fileUpload\">\r\n          <div class=\"test-component\">\r\n            <h3>文件上传组件测试</h3>\r\n            <file-upload\r\n              id=\"test-file-upload\"\r\n              tip=\"测试上传文件\"\r\n              action=\"file/upload\"\r\n              :limit=\"1\"\r\n              :multiple=\"false\"\r\n              @change=\"handleFileChange\"\r\n            ></file-upload>\r\n            <div class=\"test-result\" v-if=\"testResults.fileUpload\">\r\n              <p>测试结果: {{ testResults.fileUpload }}</p>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n        \r\n        <el-tab-pane label=\"富文本编辑器\" name=\"editor\">\r\n          <div class=\"test-component\">\r\n            <h3>富文本编辑器测试</h3>\r\n            <editor \r\n              id=\"test-editor\"\r\n              v-model=\"editorContent\" \r\n              action=\"file/upload\"\r\n              class=\"test-editor\"\r\n            ></editor>\r\n            <div class=\"test-result\" v-if=\"testResults.editor\">\r\n              <p>测试结果: {{ testResults.editor }}</p>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport ComponentChecker from '@/utils/component-checker'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 组件状态信息\r\n      componentStatus: [\r\n        { name: 'Vue实例', status: true, message: 'Vue已正确加载' },\r\n        { name: '文件上传组件', status: null, message: '未检测' },\r\n        { name: '富文本编辑器', status: null, message: '未检测' },\r\n        { name: 'Token验证', status: null, message: '未检测' }\r\n      ],\r\n      // 系统环境信息\r\n      vueVersion: Vue.version,\r\n      browserInfo: navigator.userAgent,\r\n      hasToken: !!this.$storage.get('Token'),\r\n      baseUrl: this.$base.url,\r\n      role: this.$storage.get('role') || '未登录',\r\n      // 测试相关\r\n      activeModule: 'fileUpload',\r\n      editorContent: '<p>这是一个测试内容</p>',\r\n      testResults: {\r\n        fileUpload: '',\r\n        editor: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('诊断页面已挂载');\r\n    this.runDiagnostic();\r\n  },\r\n  methods: {\r\n    // 运行诊断\r\n    async runDiagnostic() {\r\n      console.log('开始运行诊断...');\r\n      \r\n      // 检查全局组件注册\r\n      const globalComponents = Vue.options.components;\r\n      const fileUploadRegistered = !!globalComponents['file-upload'];\r\n      const editorRegistered = !!globalComponents['editor'];\r\n      \r\n      this.componentStatus[1].status = fileUploadRegistered;\r\n      this.componentStatus[1].message = fileUploadRegistered ? \r\n        '组件已全局注册' : '组件未在全局注册，请检查main.js';\r\n      \r\n      this.componentStatus[2].status = editorRegistered;\r\n      this.componentStatus[2].message = editorRegistered ? \r\n        '组件已全局注册' : '组件未在全局注册，请检查main.js';\r\n      \r\n      // 检查Token\r\n      const token = this.$storage.get('Token');\r\n      this.componentStatus[3].status = !!token;\r\n      this.componentStatus[3].message = token ? \r\n        `Token存在: ${token.substring(0, 10)}...` : 'Token不存在，请重新登录';\r\n      \r\n      // 检查DOM中的组件\r\n      setTimeout(async () => {\r\n        try {\r\n          const fileUploadExists = await ComponentChecker.checkFileUploadLoaded();\r\n          if (fileUploadExists) {\r\n            this.testResults.fileUpload = '组件已成功加载到DOM';\r\n          } else {\r\n            this.testResults.fileUpload = '组件未能加载到DOM，请检查控制台错误';\r\n          }\r\n          \r\n          const editorExists = await ComponentChecker.checkEditorLoaded();\r\n          if (editorExists) {\r\n            this.testResults.editor = '组件已成功加载到DOM';\r\n          } else {\r\n            this.testResults.editor = '组件未能加载到DOM，请检查控制台错误';\r\n          }\r\n        } catch (err) {\r\n          console.error('诊断过程出错:', err);\r\n        }\r\n      }, 1000);\r\n    },\r\n    \r\n    // 文件上传测试\r\n    handleFileChange(fileUrl) {\r\n      console.log('文件上传测试:', fileUrl);\r\n      this.testResults.fileUpload = `文件上传成功: ${fileUrl}`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.diagnostic-page {\r\n  padding: 20px;\r\n}\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n.test-component {\r\n  padding: 20px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n.test-result {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n.test-editor {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n</style> "]}]}