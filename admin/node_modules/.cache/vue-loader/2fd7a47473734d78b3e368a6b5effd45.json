{"remainingRequest":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\src\\components\\common\\FileUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\src\\components\\common\\FileUpload.vue","mtime":1748533416000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748415476000},{"path":"C:\\Users\\qinzh\\Desktop\\springboot133在线课程管理系统分离\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1748415476000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgc3RvcmFnZSBmcm9tICJAL3V0aWxzL3N0b3JhZ2UiOw0KaW1wb3J0IGJhc2UgZnJvbSAiQC91dGlscy9iYXNlIjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgLy8g5p+l55yL5aSn5Zu+DQogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwNCiAgICAgIC8vIOafpeeci+Wkp+Wbvg0KICAgICAgZGlhbG9nSW1hZ2VVcmw6ICIiLA0KICAgICAgLy8g57uE5Lu25riy5p+T5Zu+54mH55qE5pWw57uE5a2X5q6177yM5pyJ54m55q6K5qC85byP6KaB5rGCDQogICAgICBmaWxlTGlzdDogW10sDQogICAgICBmaWxlVXJsTGlzdDogW10sDQogICAgICBteUhlYWRlcnM6e30NCiAgICB9Ow0KICB9LA0KICBwcm9wczogWyJ0aXAiLCAiYWN0aW9uIiwgImxpbWl0IiwgIm11bHRpcGxlIiwgImZpbGVVcmxzIl0sDQogIGNyZWF0ZWQoKSB7DQogICAgY29uc29sZS5sb2coJ0ZpbGVVcGxvYWTnu4Tku7blt7LliJvlu7onLCB0aGlzLmFjdGlvbiwgdGhpcy5maWxlVXJscyk7DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgY29uc29sZS5sb2coJ0ZpbGVVcGxvYWTnu4Tku7blt7LmjILovb0nLCB0aGlzLmFjdGlvbiwgdGhpcy5maWxlVXJscyk7DQogICAgdGhpcy5pbml0KCk7DQogICAgLy8g5L+u5aSNVG9rZW7lpITnkIbvvIznoa7kv53kvb/nlKjmraPnoa7nmoRUb2tlbuWtl+autQ0KICAgIGNvbnN0IHRva2VuID0gc3RvcmFnZS5nZXQoIlRva2VuIik7DQogICAgdGhpcy5teUhlYWRlcnMgPSB7DQogICAgICAnVG9rZW4nOiB0b2tlbg0KICAgIH0NCiAgICBjb25zb2xlLmxvZygnRmlsZVVwbG9hZOe7hOS7tkhlYWRlcnM6JywgdGhpcy5teUhlYWRlcnMpOw0KICB9LA0KICB3YXRjaDogew0KICAgIGZpbGVVcmxzOiBmdW5jdGlvbih2YWwsIG9sZFZhbCkgew0KICAgICAgY29uc29sZS5sb2coIkZpbGVVcGxvYWQgZmlsZVVybHPlj5jljJY6ICVzIC0+ICVzIiwgb2xkVmFsLCB2YWwpOw0KICAgICAgdGhpcy5pbml0KCk7DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC8vIOiuoeeul+WxnuaAp+eahCBnZXR0ZXINCiAgICBnZXRBY3Rpb25Vcmw6IGZ1bmN0aW9uKCkgew0KICAgICAgLy8g5L+u5aSN5LiK5LygVVJM5p6E5bu65pa55byPDQogICAgICBjb25zdCB1cmwgPSBgLyR7dGhpcy4kYmFzZS5uYW1lfS9gICsgdGhpcy5hY3Rpb247DQogICAgICBjb25zb2xlLmxvZygnRmlsZVVwbG9hZOS4iuS8oFVSTDonLCB1cmwpOw0KICAgICAgcmV0dXJuIHVybDsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDliJ3lp4vljJYNCiAgICBpbml0KCkgew0KICAgICAgY29uc29sZS5sb2coJ0ZpbGVVcGxvYWTliJ3lp4vljJbvvIxmaWxlVXJsczonLCB0aGlzLmZpbGVVcmxzKTsNCiAgICAgIGlmICh0aGlzLmZpbGVVcmxzKSB7DQogICAgICAgIHRoaXMuZmlsZVVybExpc3QgPSB0aGlzLmZpbGVVcmxzLnNwbGl0KCIsIik7DQogICAgICAgIGxldCBmaWxlQXJyYXkgPSBbXTsNCiAgICAgICAgdGhpcy5maWxlVXJsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7DQogICAgICAgICAgdmFyIHVybCA9IGl0ZW07DQogICAgICAgICAgdmFyIG5hbWUgPSBpbmRleDsNCiAgICAgICAgICB2YXIgZmlsZSA9IHsNCiAgICAgICAgICAgIG5hbWU6IG5hbWUsDQogICAgICAgICAgICB1cmw6IHVybA0KICAgICAgICAgIH07DQogICAgICAgICAgZmlsZUFycmF5LnB1c2goZmlsZSk7DQogICAgICAgIH0pOw0KICAgICAgICB0aGlzLnNldEZpbGVMaXN0KGZpbGVBcnJheSk7DQogICAgICAgIGNvbnNvbGUubG9nKCdGaWxlVXBsb2Fk5Yid5aeL5YyW5a6M5oiQ77yMZmlsZUxpc3Q6JywgdGhpcy5maWxlTGlzdCk7DQogICAgICB9DQogICAgfSwNCiAgICBoYW5kbGVCZWZvcmVVcGxvYWQoZmlsZSkgew0KICAgICAgY29uc29sZS5sb2coJ0ZpbGVVcGxvYWTlh4blpIfkuIrkvKDmlofku7Y6JywgZmlsZSk7DQogICAgICAvLyDmo4Dmn6VUb2tlbuaYr+WQpuWtmOWcqO+8jOWmguaenOS4jeWtmOWcqOWImemHjeaWsOiOt+WPlg0KICAgICAgaWYgKCF0aGlzLm15SGVhZGVycy5Ub2tlbikgew0KICAgICAgICBjb25zdCB0b2tlbiA9IHN0b3JhZ2UuZ2V0KCJUb2tlbiIpOw0KICAgICAgICBpZiAodG9rZW4pIHsNCiAgICAgICAgICB0aGlzLm15SGVhZGVycy5Ub2tlbiA9IHRva2VuOw0KICAgICAgICAgIGNvbnNvbGUubG9nKCdGaWxlVXBsb2Fk5LiK5Lyg5YmN5pu05pawVG9rZW46JywgdG9rZW4pOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZpbGVVcGxvYWTkuIrkvKDliY1Ub2tlbuS4jeWtmOWcqCcpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAvLyDkuIrkvKDmlofku7bmiJDlip/lkI7miafooYwNCiAgICBoYW5kbGVVcGxvYWRTdWNjZXNzKHJlcywgZmlsZSwgZmlsZUxpc3QpIHsNCiAgICAgIGNvbnNvbGUubG9nKCdGaWxlVXBsb2Fk5LiK5Lyg5oiQ5YqfOicsIHJlcyk7DQogICAgICBpZiAocmVzICYmIHJlcy5jb2RlID09PSAwKSB7DQogICAgICAgIGZpbGVMaXN0W2ZpbGVMaXN0Lmxlbmd0aCAtIDFdWyJ1cmwiXSA9DQogICAgICAgICAgdGhpcy4kYmFzZS51cmwgKyAidXBsb2FkLyIgKyBmaWxlLnJlc3BvbnNlLmZpbGU7DQogICAgICAgIHRoaXMuc2V0RmlsZUxpc3QoZmlsZUxpc3QpOw0KICAgICAgICB0aGlzLiRlbWl0KCJjaGFuZ2UiLCB0aGlzLmZpbGVVcmxMaXN0LmpvaW4oIiwiKSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOw0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g5Zu+54mH5LiK5Lyg5aSx6LSlDQogICAgaGFuZGxlVXBsb2FkRXJyKGVyciwgZmlsZSwgZmlsZUxpc3QpIHsNCiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZpbGVVcGxvYWTkuIrkvKDlpLHotKU6JywgZXJyKTsNCiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuaWh+S7tuS4iuS8oOWksei0pSIpOw0KICAgIH0sDQogICAgLy8g56e76Zmk5Zu+54mHDQogICAgaGFuZGxlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7DQogICAgICBjb25zb2xlLmxvZygnRmlsZVVwbG9hZOenu+mZpOaWh+S7tjonLCBmaWxlKTsNCiAgICAgIHRoaXMuc2V0RmlsZUxpc3QoZmlsZUxpc3QpOw0KICAgICAgdGhpcy4kZW1pdCgiY2hhbmdlIiwgdGhpcy5maWxlVXJsTGlzdC5qb2luKCIsIikpOw0KICAgIH0sDQogICAgLy8g5p+l55yL5aSn5Zu+DQogICAgaGFuZGxlVXBsb2FkUHJldmlldyhmaWxlKSB7DQogICAgICBjb25zb2xlLmxvZygnRmlsZVVwbG9hZOmihOiniOaWh+S7tjonLCBmaWxlKTsNCiAgICAgIHRoaXMuZGlhbG9nSW1hZ2VVcmwgPSBmaWxlLnVybDsNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7DQogICAgfSwNCiAgICAvLyDpmZDliLblm77niYfmlbDph48NCiAgICBoYW5kbGVFeGNlZWQoZmlsZXMsIGZpbGVMaXN0KSB7DQogICAgICBjb25zb2xlLndhcm4oJ0ZpbGVVcGxvYWTotoXlh7rpmZDliLY6JywgZmlsZXMsIGZpbGVMaXN0KTsNCiAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhg5pyA5aSa5LiK5LygJHt0aGlzLmxpbWl0feW8oOWbvueJh2ApOw0KICAgIH0sDQogICAgLy8g6YeN5paw5a+5ZmlsZUxpc3Tov5vooYzotYvlgLwNCiAgICBzZXRGaWxlTGlzdChmaWxlTGlzdCkgew0KICAgICAgdmFyIGZpbGVBcnJheSA9IFtdOw0KICAgICAgdmFyIGZpbGVVcmxBcnJheSA9IFtdOw0KICAgICAgLy8g5pyJ5Lqb5Zu+54mH5LiN5piv5YWs5byA55qE77yM5omA5Lul6ZyA6KaB5pC65bimdG9rZW7kv6Hmga/lgZrmnYPpmZDmoKHpqowNCiAgICAgIHZhciB0b2tlbiA9IHN0b3JhZ2UuZ2V0KCJUb2tlbiIpOw0KICAgICAgZmlsZUxpc3QuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCkgew0KICAgICAgICB2YXIgdXJsID0gaXRlbS51cmwuc3BsaXQoIj8iKVswXTsNCiAgICAgICAgdmFyIG5hbWUgPSBpdGVtLm5hbWU7DQogICAgICAgIHZhciBmaWxlID0gew0KICAgICAgICAgIG5hbWU6IG5hbWUsDQogICAgICAgICAgdXJsOiB1cmwgKyAodG9rZW4gPyAiP3Rva2VuPSIgKyB0b2tlbiA6ICIiKQ0KICAgICAgICB9Ow0KICAgICAgICBmaWxlQXJyYXkucHVzaChmaWxlKTsNCiAgICAgICAgZmlsZVVybEFycmF5LnB1c2godXJsKTsNCiAgICAgIH0pOw0KICAgICAgdGhpcy5maWxlTGlzdCA9IGZpbGVBcnJheTsNCiAgICAgIHRoaXMuZmlsZVVybExpc3QgPSBmaWxlVXJsQXJyYXk7DQogICAgICBjb25zb2xlLmxvZygnRmlsZVVwbG9hZOiuvue9rmZpbGVMaXN05a6M5oiQOicsIHRoaXMuZmlsZUxpc3QpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["FileUpload.vue"],"names":[],"mappingsfile":"FileUpload.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 上传文件组件 -->\r\n    <el-upload\r\n      ref=\"upload\"\r\n      :action=\"getActionUrl\"\r\n      list-type=\"picture-card\"\r\n      :multiple=\"multiple\"\r\n      :limit=\"limit\"\r\n      :headers=\"myHeaders\"\r\n      :file-list=\"fileList\"\r\n      :on-exceed=\"handleExceed\"\r\n      :on-preview=\"handleUploadPreview\"\r\n      :on-remove=\"handleRemove\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :on-error=\"handleUploadErr\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n    >\r\n      <i class=\"el-icon-plus\"></i>\r\n      <div slot=\"tip\" class=\"el-upload__tip\" style=\"color:#838fa1;\">{{tip}}</div>\r\n    </el-upload>\r\n    <el-dialog :visible.sync=\"dialogVisible\" size=\"tiny\" append-to-body>\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport storage from \"@/utils/storage\";\r\nimport base from \"@/utils/base\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查看大图\r\n      dialogVisible: false,\r\n      // 查看大图\r\n      dialogImageUrl: \"\",\r\n      // 组件渲染图片的数组字段，有特殊格式要求\r\n      fileList: [],\r\n      fileUrlList: [],\r\n      myHeaders:{}\r\n    };\r\n  },\r\n  props: [\"tip\", \"action\", \"limit\", \"multiple\", \"fileUrls\"],\r\n  created() {\r\n    console.log('FileUpload组件已创建', this.action, this.fileUrls);\r\n  },\r\n  mounted() {\r\n    console.log('FileUpload组件已挂载', this.action, this.fileUrls);\r\n    this.init();\r\n    // 修复Token处理，确保使用正确的Token字段\r\n    const token = storage.get(\"Token\");\r\n    this.myHeaders = {\r\n      'Token': token\r\n    }\r\n    console.log('FileUpload组件Headers:', this.myHeaders);\r\n  },\r\n  watch: {\r\n    fileUrls: function(val, oldVal) {\r\n      console.log(\"FileUpload fileUrls变化: %s -> %s\", oldVal, val);\r\n      this.init();\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算属性的 getter\r\n    getActionUrl: function() {\r\n      // 修复上传URL构建方式\r\n      const url = `/${this.$base.name}/` + this.action;\r\n      console.log('FileUpload上传URL:', url);\r\n      return url;\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    init() {\r\n      console.log('FileUpload初始化，fileUrls:', this.fileUrls);\r\n      if (this.fileUrls) {\r\n        this.fileUrlList = this.fileUrls.split(\",\");\r\n        let fileArray = [];\r\n        this.fileUrlList.forEach(function(item, index) {\r\n          var url = item;\r\n          var name = index;\r\n          var file = {\r\n            name: name,\r\n            url: url\r\n          };\r\n          fileArray.push(file);\r\n        });\r\n        this.setFileList(fileArray);\r\n        console.log('FileUpload初始化完成，fileList:', this.fileList);\r\n      }\r\n    },\r\n    handleBeforeUpload(file) {\r\n      console.log('FileUpload准备上传文件:', file);\r\n      // 检查Token是否存在，如果不存在则重新获取\r\n      if (!this.myHeaders.Token) {\r\n        const token = storage.get(\"Token\");\r\n        if (token) {\r\n          this.myHeaders.Token = token;\r\n          console.log('FileUpload上传前更新Token:', token);\r\n        } else {\r\n          console.error('FileUpload上传前Token不存在');\r\n        }\r\n      }\r\n    },\r\n    // 上传文件成功后执行\r\n    handleUploadSuccess(res, file, fileList) {\r\n      console.log('FileUpload上传成功:', res);\r\n      if (res && res.code === 0) {\r\n        fileList[fileList.length - 1][\"url\"] =\r\n          this.$base.url + \"upload/\" + file.response.file;\r\n        this.setFileList(fileList);\r\n        this.$emit(\"change\", this.fileUrlList.join(\",\"));\r\n      } else {\r\n        this.$message.error(res.msg);\r\n      }\r\n    },\r\n    // 图片上传失败\r\n    handleUploadErr(err, file, fileList) {\r\n      console.error('FileUpload上传失败:', err);\r\n      this.$message.error(\"文件上传失败\");\r\n    },\r\n    // 移除图片\r\n    handleRemove(file, fileList) {\r\n      console.log('FileUpload移除文件:', file);\r\n      this.setFileList(fileList);\r\n      this.$emit(\"change\", this.fileUrlList.join(\",\"));\r\n    },\r\n    // 查看大图\r\n    handleUploadPreview(file) {\r\n      console.log('FileUpload预览文件:', file);\r\n      this.dialogImageUrl = file.url;\r\n      this.dialogVisible = true;\r\n    },\r\n    // 限制图片数量\r\n    handleExceed(files, fileList) {\r\n      console.warn('FileUpload超出限制:', files, fileList);\r\n      this.$message.warning(`最多上传${this.limit}张图片`);\r\n    },\r\n    // 重新对fileList进行赋值\r\n    setFileList(fileList) {\r\n      var fileArray = [];\r\n      var fileUrlArray = [];\r\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\r\n      var token = storage.get(\"Token\");\r\n      fileList.forEach(function(item, index) {\r\n        var url = item.url.split(\"?\")[0];\r\n        var name = item.name;\r\n        var file = {\r\n          name: name,\r\n          url: url + (token ? \"?token=\" + token : \"\")\r\n        };\r\n        fileArray.push(file);\r\n        fileUrlArray.push(url);\r\n      });\r\n      this.fileList = fileArray;\r\n      this.fileUrlList = fileUrlArray;\r\n      console.log('FileUpload设置fileList完成:', this.fileList);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}